---
# Source: portfolio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: portfolio
  labels:
    helm.sh/chart: portfolio-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.0.0"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: portfolio
    app.kubernetes.io/instance: test
---
# Source: portfolio/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio
  labels:
    helm.sh/chart: portfolio-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: portfolio
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: portfolio
      app.kubernetes.io/instance: test
  template:
    metadata:
      labels:
        app.kubernetes.io/name: portfolio
        app.kubernetes.io/instance: test
    spec:
      terminationGracePeriodSeconds: 0
      containers:
        - name: portfolio
          image: 
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: portfolio
            - secretRef:
                name: portfolio
---
# Source: portfolio/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: portfolio
  labels:
    helm.sh/chart: portfolio-0.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.0.0"
  annotations:
    dev.okteto.com/generate-host: portfolio
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: portfolio
                port:
                  name: http
